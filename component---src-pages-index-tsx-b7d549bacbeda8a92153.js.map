{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js"],"names":["MyApp","container","alignContent","alignItems","justify","direction","className","alt","src","style","paddingTop","height","variant","gutterBottom","paddingBottom","component","props","to","textDecoration","color","grey","marginRight","activeStyle","children","Button","ref","classes","_props$color","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","other","concat","root","colorInherit","focusRipple","focusVisible","label","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","short","backgroundColor","action","hoverOpacity","width","display","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name"],"mappings":"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","file":"component---src-pages-index-tsx-b7d549bacbeda8a92153.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Grid, Typography, Box, Button } from \"@material-ui/core\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport Link from \"@material-ui/core/Link\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst MyApp: React.FC = () => {\n  return (\n    <>\n      <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"center\" direction=\"column\">\n        <img className=\"logo\" alt=\"logo\" src=\"https://raw.githubusercontent.com/MetaMask/brand-resources/master/SVG/metamask-fox.svg\" style={{ paddingTop: \"10%\", height: \"400px\" }} />\n        <br />\n        <Typography variant=\"h1\">MetaMask JSON-RPC</Typography>\n        <Typography gutterBottom style={{ paddingTop: \"100px\", paddingBottom: \"20px\" }} variant=\"inherit\">\n          This API lets you interact with MetaMask via JSON-RPC\n        </Typography>\n        <br />\n        <Link\n          component={(props: { children: any }) => (\n            <GatsbyLink to={\"/api-documentation\"} style={{ textDecoration: \"none\", color: grey[500], marginRight: \"10px\" }} activeStyle={{ color: grey[500] }}>\n              {props.children}\n            </GatsbyLink>\n          )}>\n          <Button variant=\"contained\" color=\"primary\">API Reference Documentation</Button>\n        </Link>\n        <br />\n        <br />\n        <br />\n      </Grid>\n    </>\n  );\n};\n\nexport default MyApp;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"sourceRoot":""}